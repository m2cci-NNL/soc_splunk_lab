[armada_itsm_so]
dispatch.earliest_time = -7d@h
dispatchAs = user
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
request.ui_dispatch_view = search
search = | inputlookup incident_details_so \
| dedup modification_time,number \
| search "Service Offering"="armada" \
| eval \
    in_progress = if(status="In Progress",number,false) ,\
    created=if(status="New",number,false),\
    solved = if(status="Resolved",number,false),\
    closed = if(status="Closed",number,false),\
    hold = if(status="On Hold",number,false),\
    cancel = if(status="Cancelled",number,false),\
    total=number,\
    modification_time=trim(strftime(strptime(modification_time,"%m/%d/%Y"),"%Y-%m-%d")) \
| append \
    [ | inputlookup incident_details_so_armada.csv\
    | eval \
        in_progress = if(status="In Progress",number,false) ,\
        created=if(status="New",number,false),\
        solved = if(status="Resolved",number,false),\
        closed = if(status="Closed",number,false),\
        hold = if(status="On Hold",number,false),\
        cancel = if(status="Cancelled",number,false),\
        total=number,\
    modification_time=trim(strftime(strptime(modification_time,"%Y-%m-%d"),"%Y-%m-%d")) \
        ] \
| stats count(in_progress) as in_progress , count(closed) as closed, count(created) as created, count(hold) as hold, count(solved) as solved, count(cancel) as cancel,count(total) as total by modification_time \
| sort -modification_time \
| eval mode_now=strptime(strftime(now(),"%Y-%m-%d"),"%Y-%m-%d"), mode=strptime(modification_time,"%Y-%m-%d") , now=if(mode_now = mode,1,0) ,\
    mode_yesterday=strptime(strftime(relative_time(now(), "-1d"),"%Y-%m-%d"),"%Y-%m-%d") , yes=if(mode_yesterday = mode,1,0) \
| search yes=1 OR now=1 \
| eval today_time= strftime(time() ,"%Y-%m-%d") \
| eval today= strptime(today_time ,"%Y-%m-%d"), mod=strptime(modification_time,"%Y-%m-%d") \
| eval todaytime=if(mod=today,today_time,"no") \
| eval today_in_progress = if(todaytime!="no",in_progress,0),\
    prev_in_progress=if(todaytime="no",in_progress,0),\
    today_created = if(todaytime!="no",created,0),\
    prev_created=if(todaytime="no",created,0),\
    today_solved = if(todaytime!="no",solved,0),\
    prev_solved=if(todaytime="no",solved,0),\
    today_closed = if(todaytime!="no",closed,0),\
    prev_closed=if(todaytime="no",closed,0),\
    today_hold = if(todaytime!="no",hold,0),\
    prev_hold=if(todaytime="no",hold,0),\
    today_cancel = if(todaytime!="no",cancel,0),\
    prev_cancel=if(todaytime="no",cancel,0) ,\
    today_total = if(todaytime!="no",total,0),\
    prev_total=if(todaytime="no",total,0) \
| fields today_in_progress, prev_in_progress, today_created,prev_created,today_solved,prev_solved,today_closed,prev_closed,today_hold,prev_hold,today_cancel,prev_cancel,today_total,prev_total \
| stats sum(today_in_progress) as today_in_progress, sum(prev_in_progress) as prev_in_progress,sum(today_created) as today_created ,sum(prev_created) as prev_created,sum(today_solved) as today_solved ,sum(prev_solved) as prev_solved,sum(today_closed) as today_closed ,sum(prev_closed) as prev_closed,sum(today_hold) as today_hold,sum(prev_hold) as prev_hold,sum(today_cancel) as today_cancel,sum(prev_cancel) as prev_cancel,sum(today_total) as today_total,sum(prev_total) as prev_total \
| eval ChangePercent_in_progress= case(prev_in_progress = today_in_progress,"0",like(prev_in_progress,"0") AND prev_in_progress!= today_in_progress ,"N/A",true(),round((today_in_progress - prev_in_progress ) / prev_in_progress * 100,0)), ChangePercent_in_progress=if(ChangePercent_in_progress > 0,"+".ChangePercent_in_progress,ChangePercent_in_progress),\
    ChangePercent_created= case(prev_created = today_created,"0",like(prev_created,"0") AND prev_created!= today_created ,"N/A",true(),round((today_created - prev_created ) / prev_created * 100,0)), ChangePercent_created=if(ChangePercent_created > 0,"+".ChangePercent_created,ChangePercent_created),\
    ChangePercent_solved= case(prev_solved = today_solved,"0",like(prev_solved,"0") AND prev_solved!= today_solved ,"N/A",true(),round((today_solved - prev_solved ) / prev_solved * 100,0)), ChangePercent_solved=if(ChangePercent_solved > 0,"+".ChangePercent_solved,ChangePercent_solved)\
    ,ChangePercent_closed= case(prev_closed = today_closed,"0",like(prev_closed,"0") AND prev_closed!= today_closed ,"N/A",true(),round((today_closed - prev_closed ) / prev_closed * 100,0)), ChangePercent_closed=if(ChangePercent_closed > 0,"+".ChangePercent_closed,ChangePercent_closed)\
    ,ChangePercent_hold= case(prev_hold = today_hold,"0",like(prev_hold,"0") AND prev_hold!= today_hold ,"N/A",true(),round((today_hold - prev_hold ) / prev_hold * 100,0)), ChangePercent_hold=if(ChangePercent_hold > 0,"+".ChangePercent_hold,ChangePercent_hold)\
    , ChangePercent_cancel= case(prev_cancel = today_cancel,"0",like(prev_cancel,"0") AND prev_cancel!= today_cancel ,"N/A",true(),round((today_cancel - prev_cancel ) / prev_cancel * 100,0)), ChangePercent_cancel=if(ChangePercent_cancel > 0,"+".ChangePercent_cancel,ChangePercent_cancel)\
    , ChangePercent_total= case(prev_total = today_total,"0",like(prev_total,"0") AND prev_total!= today_total ,"N/A",true(),round((today_total - prev_total ) / prev_total * 100,0)), ChangePercent_total=if(ChangePercent_total > 0,"+".ChangePercent_total,ChangePercent_total)

[armada_itsm_so_factory]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 2 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index","entity_type","eventtype","linecount","punct","splunk_server","tag","tag::eventtype","timestamp","unix_category","unix_group","state"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
display.visualizations.show = 0
request.ui_dispatch_app = armada_holistic_dashboard_sh
request.ui_dispatch_view = search
search = index=sag_snow_normal short_description="*armada*" number=ITS-INC*\
|  eval modification_time=sys_updated_on , service_offering="ARMADA" \
,status=case(state=2,"In Progress", state=6,"Resolved",state=7,"Closed",state=1,"New",state=-5,"Cancelled",true(),false) \
| stats latest(service_offering) as "Service Offering"  , latest(modification_time) as modification_time , latest(name) as name, latest(priority) as priority , latest(short_description) as short_description, latest(status) as status, latest(sys_id) as sys_id by number\
\
| outputlookup incident_details_so_armada.csv

[gen_armada_list_servers]
alert.track = 0
cron_schedule = */15 * * * *
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
enableSched = 1
request.ui_dispatch_view = search
schedule_window = auto
search = index =sag_connectivity_normal sourcetype="connectivity:ping:server:csv" \
    [| inputlookup ci_so_mapping_rep \
    | search SO="armada" OR name=*XSPH11A551T* \
    | stats count by name \
    | eval search="*".name."*" \
    | table search \
    | mvcombine search delim=" OR " \
    | nomv search] \
| rex field=server "(?<server>[^\.]+)" \
| stats latest(status) as Status by server \
| eval status=case(Status="OK","Online",Status="KO","Offline"),color_value=if(status="Offline","#dc3545","#5cb85c"),icon_value="server" \
| rename server as Hostname \
| table Hostname,status,icon_value,color_value \
| eval Hostname=upper(Hostname) \
| outputlookup armada_list_servers.csv

[armada_wise_list_servers]
cron_schedule = */15 * * * *
disabled = 1
dispatch.earliest_time = -5m
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
enableSched = 1
request.ui_dispatch_view = search
schedule_window = auto
search = index =sag_connectivity_normal sourcetype="connectivity:ping:server:csv" \
    [| inputlookup ci_so_mapping_rep \
    | search SO="armada" OR name=*XSPH11A551T* \
    | stats count by name \
    | eval search="*".name."*" \
    | table search \
    | mvcombine search delim=" OR " \
    | nomv search] \
| rex field=server "(?<server>[^\.]+)" \
| stats latest(status) as Status by server \
| eval status=case(Status="OK","Online",Status="KO","Offline"),color_value=if(status="Offline","#dc3545","#5cb85c"),icon_value="server" \
| rename server as Hostname \
| table Hostname,status,icon_value,color_value \
| eval Hostname=upper(Hostname) \
| outputlookup armada_list_servers.csv

[armada_dr_br_sharepoint_list]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
display.visualizations.show = 0
request.ui_dispatch_app = armada_holistic_dashboard_sh
request.ui_dispatch_view = search
search = index=*sharepoint*\
| eval _raw=replace(_raw,"( : )","||")\
| extract pairdelim="{\
}" kvdelim="||"\
| search Title="ARMADA"\
|  stats latest(BR_x0020_Test_x0020_Result) as BR_x0020_Test_x0020_Result, latest(BR_x0020_Last_x0020_Test) as BR_x0020_Last_x0020_Test,latest(BR_x0020_Next_x0020_Test) as BR_x0020_Next_x0020_Test, latest(DRP) as DRP, \
latest(DRP_x0020_Last_x0020_Date) as DRP_x0020_Last_x0020_Date,latest(Next_x0020_DRP_x0020_Test) as Next_x0020_DRP_x0020_Test\
| fillnull BR_x0020_Test_x0020_Result value="N/A"\
| fillnull BR_x0020_Last_x0020_Test value="N/A"\
| fillnull BR_x0020_Next_x0020_Test value="N/A"\
| fillnull DRP value="N/A"\
| fillnull DRP_x0020_Last_x0020_Date value="N/A"\
| fillnull Next_x0020_DRP_x0020_Test value="N/A"\
|  rename BR_x0020_Test_x0020_Result as "BR Compliant" , BR_x0020_Last_x0020_Test as "Date of Last BR Test",  BR_x0020_Next_x0020_Test as "Next BR Test Required",   DRP as "DR Compliant" ,  DRP_x0020_Last_x0020_Date as "Date of Last DR Test" , Next_x0020_DRP_x0020_Test as "Next DR Test Required"

[armada_hl_user_access]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 14 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index","entity_type","eventtype","linecount","punct","splunk_server","tag","tag::eventtype","timestamp","unix_category","unix_group","state"]
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = armada_holistic_dashboard_sh
request.ui_dispatch_view = search
search = index=_internal source="/opt/splunk/var/log/splunk/splunkd_ui_access.log" /app  NOT(user="-" OR uri_path="*/app/*/search") uri_path=*/app/armada_holistic*\
|stats latest(_time) as _time by user \
 | join type=left user  [ \
| rest /servicesNS/-/-/authentication/users\
| dedup realname, email , title\
| table realname, email , title \
| rename title as "user" ]\
| outputlookup armada_hl_users.csv

[ITSM_ARMADA_HLD_INCIDENTS]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = armada_holistic_dashboard_sh
request.ui_dispatch_view = search
search = index=sag_snow_normal sourcetype="snow:incident" service_offering="95a01a2bdb590340cb6b7a65ae961960" \
| eval cmdb_ci=if(isnull(cmdb_ci) OR cmdb_ci="","No CI",cmdb_ci) \
| eval service_offering=if(isnull(service_offering) OR service_offering="","No SO",service_offering) \
| eval x_saag_sanofi_its_it_solution=if(isnull(x_saag_sanofi_its_it_solution) OR x_saag_sanofi_its_it_solution="","No IT Solution",x_saag_sanofi_its_it_solution) \
| lookup SPLUNK_HOLISTIC_SO sys_id as service_offering outputnew name as so \
| lookup SPLUNK_HOLISTIC_IT_SOLUTION sys_id as x_saag_sanofi_its_it_solution outputnew name as it_solution \
| lookup SPLUNK_HOLISTIC_CI_ALL sys_id as cmdb_ci outputnew name as NEW_CI \
| eval status=case(state=1 OR trim(state)="","New", state=2,"In Progress", state=6,"Resolved", state=7,"Closed",state=-5,"Pending",true(),false) \
| stats latest(it_solution) as it_solution , latest(so) as so, latest(NEW_CI) as NEW_CI , latest(assignment_group_name) as assignment_group_name , latest(status) as status, latest(opened_at) as opened_at , latest(sys_created_on) as sys_created_on, latest(sys_updated_on) as sys_updated_on , latest(priority) as priority , latest(resolved_at) as resolved_at , latest(closed_at) as closed_at, latest(short_description) as short_description , latest(sys_created_by) as sys_created_by , latest(sys_id) as sys_id , latest(active) as active , latest(approval) as approval , latest(urgency) as urgency, latest(knowledge) as knowledge , latest(state) as state by number \
| lookup ITSM_GENERAL_HLD_INCIDENTS number outputnew so as latest_so\
| search latest_so="ARMADA"\
| eval iris_code=if(like(short_description,"%|%"),mvindex(split(short_description,"|"),0),"null") \
| eval iris_code=if(like(iris_code,"%*%"),"null",iris_code) \
| eval iris_code=if(match(iris_code,"\d"),iris_code,"null") \
| eval sys_created_by_tool=if(like(sys_created_by,"%technic%"),sys_created_by,"Other User (Manually)") \
| eval iris_code=case(like(sys_created_by_tool, "%technical_user%"),iris_code,true(),"null") \
| inputlookup append=true ITSM_ARMADA_HLD_INCIDENTS.csv \
| eval time=strptime(sys_created_on, "%Y-%m-%d %H:%M:%S")\
    , last_3_months=relative_time(now(), "-2mon@mon") \
| where time>last_3_months \
| fields - time , last_3_months \
| dedup number \
| outputlookup create_empty=false ITSM_ARMADA_HLD_INCIDENTS.csv

[ITSM_ARMADA_HLD_PROBLEMS]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = armada_holistic_dashboard_sh
request.ui_dispatch_view = search
search = index=sag_snow_normal sourcetype="snow:problem" service_offering="95a01a2bdb590340cb6b7a65ae961960" \
| eval cmdb_ci=if(isnull(cmdb_ci) OR cmdb_ci="","No CI",cmdb_ci) \
| eval service_offering=if(isnull(service_offering) OR service_offering="","No SO",service_offering) \
| eval x_saag_sanofi_its_it_solution=if(isnull(x_saag_sanofi_its_it_solution) OR x_saag_sanofi_its_it_solution="","No IT Solution",x_saag_sanofi_its_it_solution) \
| lookup SPLUNK_HOLISTIC_SO sys_id as service_offering outputnew name as so \
| lookup SPLUNK_HOLISTIC_IT_SOLUTION sys_id as x_saag_sanofi_its_it_solution outputnew name as it_solution \
| lookup SPLUNK_HOLISTIC_CI_ALL sys_id as cmdb_ci outputnew name as NEW_CI \
| eval status=case(state=2,"Under review", state=6,"Closed", state=7,"Draft", state=8,"Fix in Progress",state=3,"In Progress",state=4,"Pending",state=1,"New",state=5,"Resolved",true(),false) \
| stats latest(it_solution) as it_solution , latest(so) as so, latest(NEW_CI) as NEW_CI , latest(assignment_group_name) as assignment_group_name , latest(status) as status, latest(opened_at) as opened_at , latest(sys_created_on) as sys_created_on, latest(sys_updated_on) as sys_updated_on , latest(priority) as priority , latest(resolved_at) as resolved_at , latest(closed_at) as closed_at, latest(short_description) as short_description , latest(sys_created_by) as sys_created_by , latest(sys_id) as sys_id , latest(active) as active , latest(approval) as approval , latest(urgency) as urgency, latest(knowledge) as knowledge , latest(known_error) as known_error , latest(state) as state , latest(problem_state_name) as problem_state_name , latest(related_incidents) as related_incidents by number \
| lookup ITSM_GENERAL_HLD_PROBLEMS number outputnew so as latest_so\
| search latest_so="ARMADA"\
| inputlookup append=true ITSM_ARMADA_HLD_PROBLEMS.csv \
| eval time=strptime(sys_created_on, "%Y-%m-%d %H:%M:%S")\
    , last_3_months=relative_time(now(), "-2mon@mon") \
| where time>last_3_months \
| fields - time , last_3_months \
| dedup number \
| outputlookup create_empty=false ITSM_ARMADA_HLD_PROBLEMS.csv

[ITSM_ARMADA_HLD_CHANGE_REQUESTS]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.preview = 1
display.visualizations.custom.SA-ITSI-CustomModuleViz.mini_chart.runOnSubmit = 1
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.mask = 0
display.visualizations.custom.splunk_app_aws.anomaly_detection_viz.stack_mode = 0
display.visualizations.custom.status_indicator_app.status_indicator.useColors = 1
display.visualizations.custom.status_indicator_app.status_indicator.useThousandSeparator = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = armada_holistic_dashboard_sh
request.ui_dispatch_view = search
search = index=sag_snow_normal sourcetype="snow:change_request" service_offering="95a01a2bdb590340cb6b7a65ae961960" \
| eval cmdb_ci=if(isnull(cmdb_ci) OR cmdb_ci="","No CI",cmdb_ci) \
| eval service_offering=if(isnull(service_offering) OR service_offering="","No SO",service_offering) \
| eval x_saag_sanofi_its_it_solution=if(isnull(x_saag_sanofi_its_it_solution) OR x_saag_sanofi_its_it_solution="","No IT Solution",x_saag_sanofi_its_it_solution) \
| lookup SPLUNK_HOLISTIC_SO sys_id as service_offering outputnew name as so \
| lookup SPLUNK_HOLISTIC_IT_SOLUTION sys_id as x_saag_sanofi_its_it_solution outputnew name as it_solution \
| lookup SPLUNK_HOLISTIC_CI_ALL sys_id as cmdb_ci outputnew name as NEW_CI \
| eval status=case(state=1,"New", state=2,"In progress", state=3,"Closed", state=8,"Awaiting",true(),false) \
| stats latest(it_solution) as it_solution , latest(so) as so, latest(NEW_CI) as NEW_CI , latest(assignment_group_name) as assignment_group_name , latest(status) as status, latest(opened_at) as opened_at , latest(sys_created_on) as sys_created_on, latest(sys_updated_on) as sys_updated_on , latest(priority) as priority , latest(resolved_at) as resolved_at , latest(closed_at) as closed_at, latest(short_description) as short_description , latest(sys_created_by) as sys_created_by , latest(sys_id) as sys_id , latest(active) as active , latest(approval) as approval , latest(urgency) as urgency, latest(knowledge) as knowledge by number \
| lookup ITSM_GENERAL_HLD_CHANGE_REQUESTS number outputnew so as latest_so \
| search latest_so="ARMADA" \
| inputlookup append=true ITSM_ARMADA_HLD_CHANGE_REQUESTS.csv \
| eval time=strptime(sys_created_on, "%Y-%m-%d %H:%M:%S")\
    , last_3_months=relative_time(now(), "-2mon@mon") \
| where time>last_3_months \
| fields - time , last_3_months \
| dedup number \
| outputlookup create_empty=false ITSM_ARMADA_HLD_CHANGE_REQUESTS.csv

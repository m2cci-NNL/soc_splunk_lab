name: Deploy Splunk App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: [ self-hosted, splunk ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Pack UNIQUEMENT l'app: soc_lab_app/etc/apps/soc_lab
      - name: Pack app
        run: |
          tar -czf soc_lab.tgz -C soc_lab_app/etc/apps soc_lab
          ls -l soc_lab.tgz

      # Déploiement local vers $SPLUNK_HOME/etc/apps/soc_lab/
      - name: Deploy to $SPLUNK_HOME
        env:
          SPLUNK_HOME: ${{ secrets.REMOTE_SPLUNK_HOME }}
          APP_NAME: ${{ secrets.REMOTE_APP_NAME || 'soc_lab' }}
        run: |
          set -e
          sudo mkdir -p "$SPLUNK_HOME/etc/apps"
          sudo tar -xzf soc_lab.tgz -C "$SPLUNK_HOME/etc/apps"
          sudo chown -R splunk:splunk "$SPLUNK_HOME/etc/apps/soc_lab" || true
          echo "=== Tree ==="
          sudo find "$SPLUNK_HOME/etc/apps/soc_lab" -maxdepth 4 -type f \
            \( -path "*/default/app.conf" -o -path "*/default/data/ui/nav/*" -o -path "*/default/data/ui/views/*" \) -print
          echo "=== app.conf ==="
    
      # Redémarre Splunk proprement, puis vérifie nav et vues
      - name: Restart via systemctl with clean env
        env:
          SPLUNK_HOME: ${{ secrets.REMOTE_SPLUNK_HOME }}
          SPLUNK_USERNAME: ${{ secrets.SPLUNK_USERNAME }}
          SPLUNK_PASSWORD: ${{ secrets.SPLUNK_PASSWORD }}
        run: |
          set -e
          echo "→ Restart Splunk service (clean environment)"
           sudo -u splunk "$SPLUNK_HOME/bin/splunk" restart --answer-yes --no-prompt || \
           "$SPLUNK_HOME/bin/splunk" restart --answer-yes --no-prompt


          sudo -E -u splunk "$SPLUNK_HOME/bin/splunk" btool check --debug || true
          echo "→ Health check on management API (8089)"
          for i in {1..30}; do
            if curl -sk -u "$SPLUNK_USERNAME:$SPLUNK_PASSWORD" https://127.0.0.1:8089/services/server/info >/dev/null; then
              echo "Splunkd API OK ✅"
              exit 0
            fi
            echo "Waiting for Splunkd (try $i/30)..."
            sleep 5
          done
          echo "❌ ERROR: Splunkd API not responding after 150s"
          exit 1